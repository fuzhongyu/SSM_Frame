<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd"
	   default-lazy-init="true">

<description>Spring Configuration</description>

	<!-- 数据源配置, 使用 c3p0 数据库连接池 -->
	<bean id="dataSource_2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url_2}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 配置c3p0私有属性 -->
		<property name="minPoolSize" value="${jdbc.pool.minIdle}" />
		<property name="maxPoolSize" value="${jdbc.pool.maxActive}" />
		<!--关闭连接后不自动commit-->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="checkoutTimeout" value="1000"/>
		<!--当获取连接失败，重试次数-->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>
	

	<!-- MyBatis  配置sqlSessionFactory -->
	<bean id="sqlSessionFactory_2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据库连接池-->
		<property name="dataSource" ref="dataSource_2"/>
		<!--配置mybatis全局配置文件-->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
 		<!--扫描包entity包，使用别名,如：com.fzy.modules.shop.entity.Seckill 可以直接在mapping的resultType中放Seckill-->
		<property name="typeAliasesPackage" value="com.fzy.user"/>
		<!--扫描sql配置文件：mapper需要的xml文件-->
		<property name="mapperLocations" value="classpath:mappings/user/*.xml"/>

	</bean>


	<!--扫描dao接口，动态实现dao接口注入到spring容器-->
	<bean id="mapperScannerConfigurer_2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入sqlSessionFactory-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_2" />
		<!--给出需要扫描的dao接口包,实例化dao-->
		<property name="basePackage" value="com.fzy.user"/>
		<!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
		<property name="annotationClass" value="com.fzy.annotation.MyBatisDao"/>
	</bean>

	<!-- 定义事务 -->
	<bean id="transactionManager_2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_2" />
	</bean>

	<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
	<tx:annotation-driven transaction-manager="transactionManager_2" proxy-target-class="true"/>

</beans>