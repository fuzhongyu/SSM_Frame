<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

  <display-name>LogManager</display-name>

  <!-- 加载log4j配置文件 -->

  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>multiModule</param-value>
  </context-param>

  <!-- 如果是在根目录，则可以不指定log4j.properties文件的路径，spring就能自动加载，如果不是在根目录则需要指定 -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:/log/log4j.properties</param-value>
  </context-param>
  <!--log4jRefreshInterval为100000表示 开一条watchdog线程每10秒扫描一下配置文件的变化;   -->
  <!-- ********* 多模块下这个配置加上会出错 ，带找原因 *********  -->
  <!--<context-param>-->
    <!--<param-name>log4jRefreshInterval</param-name>-->
    <!--<param-value>100000</param-value>-->
  <!--</context-param>-->
  <!-- 1. 动态的改变记录级别和策略，不需要重启Web应用; 2. 把log文件定在 /WEB-INF/logs/ 而不需要写绝对路径。 -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>


  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:spring-context.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>




  <servlet>
    <servlet-name>mvc-servlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--DispatcherServlet对应的上下文配置，默认为/WEB-INF/$servlet-name$-servlet.xml-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <async-supported>true</async-supported>
  </servlet>

  <servlet-mapping>
    <servlet-name>mvc-servlet</servlet-name>
    <!--拦截所有请求-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--<servlet>-->
  <!--<servlet-name>sysInitServlet</servlet-name>-->
  <!--<servlet-class>com.fzy.common.servlet.SysInitServlet</servlet-class>-->
  <!--<load-on-startup>0</load-on-startup>-->
  <!--</servlet>-->
  <!--<servlet-mapping>-->
  <!--<servlet-name>sysInitServlet</servlet-name>-->
  <!--<url-pattern>/*</url-pattern>-->
  <!--</servlet-mapping>-->


  <!--初始化监听-->
  <listener>
    <listener-class>com.fzy.listener.SysInit</listener-class>
  </listener>

  <!--利用过滤器对编码进行设置-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <async-supported>true</async-supported>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


</web-app>
